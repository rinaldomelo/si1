import static org.junit.Assert.assertEquals;

import org.junit.Test;

public class TextNumberText {

	String[] unidades = {"um", "dois", "tres", "quatro", "cinco", "seis", "sete", "oito", "nove"};

	
	@Test
	public void testa0A20() {

		String[] numbersTextZeroToTwenty = {"zero", "um", "dois", "tres", "quatro", "cinco",
				"seis", "sete", "oito", "nove", "dez", "onze", "doze", 
				"treze", "quatorze", "quinze", "desseseis", "dezessete",
				"dezoito", "dezenove","vinte"};

		for (int i = 0; i < numbersTextZeroToTwenty.length; i++) {

			assertEquals(numbersTextZeroToTwenty[i], NumberText.getNumberText(i+""));
		}
	}

	@Test
	public void testaDezenas() {

		String[] dezenas = {"dez", "vinte", "trinta", "quarenta", "cinquenta", "sessenta", "setenta", "oitenta", "noventa"};

		for (int i = 0; i < dezenas.length; i++) {

			assertEquals(dezenas[i], NumberText.getNumberText(((i+1)*10)+""));
		}
	}

	@Test
	public void testa21A99() {

		String[] dezenas = {"vinte", "trinta", "quarenta", "cinquenta", "sessenta", "setenta", "oitenta", "noventa"};

		for (int i = 0; i < dezenas.length; i++) {

			for (int j = 0; j < unidades.length; j++) {

				assertEquals(dezenas[i]+" e "+unidades[j], NumberText.getNumberText(((i+2)*10)+(j+1)+""));
			}
		}
	}

	@Test
	public void testaCentenas() {

		String[] dezenas = {"cem", "duzentos", "trezentos", "quatrocentos", "quinhentos", "seiscentos", "setecentos", "oitocentos", "novecentos"};

		for (int i = 0; i < dezenas.length; i++) {

			assertEquals(dezenas[i], NumberText.getNumberText(((i+1)*100)+""));
		}
	}

	@Test
	public void testa101A110() {
		String[] dezenas = {"vinte", "trinta", "quarenta", "cinquenta", "sessenta", "setenta", "oitenta", "noventa"};

		String[] centenas = {"cento", "duzentos", "trezentos", "quatrocentos", "quinhentos", "seiscentos", "setecentos", "oitocentos", "novecentos"};

		
		for (int i = 0; i < centenas.length; i++) {
			for (int j = 0; j < dezenas.length; j++) {
				for (int k = 0; k < centenas.length; k++) {
					assertEquals(centenas[i]+" e "+dezenas[j]+" e "+unidades[k], NumberText.getNumberText("" + (i+1)+ (j+2) + (k+1)));
				}
			}
		}
		
		assertEquals("cento e um", NumberText.getNumberText("101"));
		assertEquals("cento e dois", NumberText.getNumberText("102"));
		assertEquals("cento e tres", NumberText.getNumberText("103"));
		assertEquals("cento e quatro", NumberText.getNumberText("104"));
		assertEquals("cento e cinco", NumberText.getNumberText("105"));
		assertEquals("cento e seis", NumberText.getNumberText("106"));
		assertEquals("cento e sete", NumberText.getNumberText("107"));
		assertEquals("cento e oito", NumberText.getNumberText("108"));
		assertEquals("cento e nove", NumberText.getNumberText("109"));
		assertEquals("cento e dez", NumberText.getNumberText("110"));
		assertEquals("cento e onze", NumberText.getNumberText("111"));
		assertEquals("cento e doze", NumberText.getNumberText("112"));
		assertEquals("cento e treze", NumberText.getNumberText("113"));
		assertEquals("cento e quatorze", NumberText.getNumberText("114"));
		assertEquals("cento e quinze", NumberText.getNumberText("115"));
		assertEquals("cento e desesseis", NumberText.getNumberText("116"));

	
	}
}
